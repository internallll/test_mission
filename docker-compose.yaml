version: '3.8'

services:
  test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: test
    ports:
      - "8082:8000"  # Исправлено с 80 на 8000 (стандартный порт Django)
    env_file:
      - .env
    environment:
      - DEBUG=${DEBUG}
      - POSTGRES_HOST=test_db_pg  # Используем имя сервиса
      - POSTGRES_PORT=5432        # Внутренний порт контейнера PostgreSQL
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
      - .env:/app/.env

    depends_on:
      test_db_pg:
        condition: service_healthy
    networks:
      - network
    restart: always # Лучше чем always

  test_db_pg:
    image: postgres:17
    container_name: test_db_pg
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5434:5432"  # Хост:5434 → Контейнер:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  pgdata:

networks:
  network:
    driver: bridge