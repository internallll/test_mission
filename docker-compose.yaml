services:
  test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: test
    ports:
      - "8081:81"
    env_file:
      - .env
    environment:
      - DEBUG=False
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ./media:/media
      - ./logs:/logs
    depends_on:
      test_db_pg:
        condition: service_healthy
    networks:
      - backend
    restart: always



  test_db_pg:
    image: postgres:17
    container_name: test_db_pg
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s


volumes:
  pgdata:
networks:
  backend:
    name: backend
    driver: bridge
